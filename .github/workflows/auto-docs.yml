name: Auto-Update Documentation

on:
  push:
    branches: [master]
  workflow_dispatch:  # Allow manual triggering for testing

jobs:
  update-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install Gemini CLI
        run: npm install -g @google/gemini-cli
      
      - name: Generate Project Documentation
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Create docs directory if it doesn't exist
          mkdir -p docs
          
          # Retry logic for rate limiting
          for attempt in {1..10}; do
            echo "📝 Documentation generation attempt $attempt of 10..."
            
            # Run Gemini CLI with minimal analysis - just based on visible files
            echo "Repository: ${{ github.repository }}" > project-info.txt
            echo "Branch: ${{ github.ref_name }}" >> project-info.txt
            echo "Files:" >> project-info.txt
            ls -la | head -10 >> project-info.txt
            
            gemini "Create a simple project documentation in Markdown format. Output only the markdown, no conversation.

            Based on this basic information:
            $(cat project-info.txt)
            
            Create a brief overview with:
            1. Project name: ${{ github.repository }}
            2. Repository type (appears to be a Hexo blog based on visible files)
            3. Basic purpose and technology stack
            
            Start with # and keep it under 100 words." > docs/general.md 2>&1
            
            # Check if we got valid content
            if grep -q "ApiError\|status 429\|RESOURCE_EXHAUSTED\|exceeded your current quota" docs/general.md; then
              echo "⚠️ File contains API error messages, attempt failed"
            elif [ -s docs/general.md ]; then
              echo "✅ Documentation file created with valid content"
              echo "✅ Documentation generated successfully on attempt $attempt"
              break
            else
              echo "⚠️ Documentation file is empty, attempt failed"
            fi
            
            # If we reach here, the attempt failed
            echo "❌ Attempt $attempt failed"
            if [ $attempt -lt 10 ]; then
              wait_time=$((attempt * 60))  # Wait 60, 120, 180, 240 seconds
              echo "⏳ Waiting ${wait_time} seconds before retry..."
              sleep $wait_time
            else
              echo "🚫 All attempts failed - creating minimal fallback documentation"
              echo "# Project Documentation
              
              Documentation generation failed due to API rate limits. 
              
              Please check the repository files for more details." > docs/general.md
            fi
          done
      
      - name: Commit updated docs
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git diff --staged --quiet || git commit -m "🤖 Auto-update project documentation"
          git push
